# Returns data for the "Browse users" page
# Requires a body with filtering and sorting options
# Role and Userhandle can be found by substring 
# e.g. "developer" will find all types of developers and "ska" will find all userhandles that contain "ska"
GET http://localhost:3001/users
Content-Type: application/json

{
    "filterInput": {
        "userhandle": "myr", 
        "role": "developer", 
        "skills": ["Git"]},
    "sortInput": "-createdAt" 
}

###

#Returns data for the user profile page
#NOTE: If you did a DB reset, this userID will not work anymore, so change it to a user that exists
GET http://localhost:3001/users/62a6641b0869e44489be9fad

###

#Returns data for the chat list of a certain user, those with the most recent messages first
GET http://localhost:3001/users/62a6641b0869e44489be9fad/chat-previews

###

#Create a new user after submitting the registration form
#Note: email and username must both be unique in the database, so same info will not work twice
POST http://localhost:3001/users
Content-Type: application/json

{
    "email": "something@something.ca",
    "password": "123",
    "userhandle": "newUser2"
}

###

#This is both for filling out the profile and for editing it later
PATCH http://localhost:3001/users/62a6641b0869e44489be9fad
Content-Type: application/json

{
    "bio": "Ths is an updated bio to test"
}

###

# All the options for: social media, roles, skills, proposal categories
GET http://localhost:3001/options

###

#Get the full chat history
GET http://localhost:3001/chats/62a6641d0869e44489be9fe6

###

#Create a new chat
#This is called ONLY if the sender has not chatted with the recipient yet, otherwise
# POST http://localhost:3001/chats/
# Content-Type: application/json
# {
#     "firstMessage": {
#         "author": "62a5f95625c58e7f389244f6",
#         "text": "This is a new message"
#     }
# }

###

#Add a new message to the chat
PATCH http://localhost:3001/chats/62a6641d0869e44489be9fe6
Content-Type: application/json

{
    "author": "62a6641b0869e44489be9fb4",
    "text": "<3 <3 <3"
}

###

#Returns active proposals only for the "Browse users" page
#Requires a body with filtering and sorting options
# Title can be found by substring 
GET http://localhost:3001/proposals
Content-Type: application/json

{
    "filterInput": {"seeking": ["Full-stack developer"]},
    "sortInput": "-createdAt" 
}


###

# Returns details of a proposal to be shown on the individual proposal page
GET http://localhost:3001/proposals/62a6641d0869e44489be9fdd

###

#When the user creates a new proposal
POST http://localhost:3001/proposals
Content-Type: application/json

{
    "author": "62a6641b0869e44489be9fba",
    "status": "Active",
    "description": "This is some other new request",
    "seeking": "Full-stack developer"
}
